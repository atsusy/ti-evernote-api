#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'
require 'tokenizer'

ConstOp = Struct.new(:name, :type, :object)
TypedefOp = Struct.new(:name, :type)
EnumOp = Struct.new(:name, :items)
SenumOp = Struct.new(:name, :items)
StructOp = Struct.new(:name, :fields)
FieldOp = Struct.new(:name, :type, :id, :req, :value)
ExceptionOp = Struct.new(:name, :fields)
ServiceOp = Struct.new(:name, :functions, :extends)
FunctionOp = Struct.new(:name, :result, :arguments, :oneway, :throws)
ConstValueOp = Struct.new(:type, :value)
TypeOp = Struct.new(:category, :name)
class SetOp < TypeOp
  attr_accessor :type
  def initialize(type=nil)
    @type = type
    super(:set, nil)
  end
end
class ListOp < TypeOp
  attr_accessor :type
  def initialize(type=nil)
    @type = type
    super(:list, nil)
  end
end
class MapOp < TypeOp
  attr_accessor :key, :object
  def initialize(key=nil, object=nil)
    @key, @object = key, object
    super(:map, nil)
  end
end


class ThriftIDL < Racc::Parser

module_eval(<<'...end thrift_idl_parser.y/module_eval...', 'thrift_idl_parser.y', 236)
attr_reader :includes, :cpp_includes, :namespaces
attr_reader :consts, :typedefs, :enums, :senums, :structs, :exceptions, :services

def parse(str)
  @includes = []
  @cpp_includes = []
  @namespaces = {}

  @consts = {}
  @typedefs = {}
  @enums = {}
  @senums = {}
  @structs = {}
  @exceptions = {}
  @services = {}

  @tokens = tokenize(str)
  do_parse
  self
end

def next_token
  @tokens.shift
end
...end thrift_idl_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    77,    93,   135,    78,    77,   109,   126,    78,    82,    93,
    76,   140,    82,    77,    76,    89,    78,    77,    99,   147,
    78,    82,    96,    76,    88,    82,   121,    76,    77,    94,
    93,    78,   101,    85,    99,   101,    82,    25,    76,   102,
    81,   119,   102,   101,    81,    87,    56,    63,   101,   101,
   102,    86,    25,    81,    62,   102,   102,    81,    28,    29,
    30,    31,    32,    33,    34,    35,    36,    40,    81,    25,
    54,    41,    42,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    40,    57,    25,    95,    41,    42,    90,    93,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    40,
    25,   112,   113,    41,    42,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    40,    54,    58,    25,    41,    42,
   105,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    40,   106,    25,    54,    41,    42,   118,    52,    28,    29,
    30,    31,    32,    33,    34,    35,    36,    40,    73,    59,
   114,    41,    42,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    40,    51,   101,    50,    41,    42,     2,   101,
     3,   102,     4,     5,   101,    13,   102,    14,    15,    49,
    48,   102,    16,    17,    18,    19,    28,    29,    30,    31,
    32,    33,    34,    35,    36,    40,   101,   124,    47,    41,
    42,    46,   127,   102,    67,   129,   130,    66,   132,   133,
    23,    22,    65,    21,    20,    64,   143,    61,   145,    60 ]

racc_action_check = [
   103,   137,   132,   103,   135,    87,   115,   135,   103,   146,
   103,   137,   135,    64,   135,    70,    64,   104,   115,   146,
   104,    64,    74,    64,    70,   104,   104,   104,   129,    72,
    72,   129,   132,    68,    74,    87,   129,    67,   129,   132,
   103,   103,    87,   142,   135,    69,    42,    50,   139,   134,
   142,    69,   111,    64,    50,   139,   134,   104,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,   129,    56,
    41,    67,    67,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   111,    43,    13,    73,   111,   111,    71,    71,
    56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
    65,    92,    92,    56,    56,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    13,    40,    46,    98,    13,    13,
    83,    65,    65,    65,    65,    65,    65,    65,    65,    65,
    65,    84,   105,    85,    65,    65,    98,    24,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    62,    47,
    93,    98,    98,   105,   105,   105,   105,   105,   105,   105,
   105,   105,   105,    23,   124,    19,   105,   105,     1,    89,
     1,   124,     1,     1,    75,     1,    89,     1,     1,    18,
    17,    75,     1,     1,     1,     1,    14,    14,    14,    14,
    14,    14,    14,    14,    14,    14,   120,   109,    16,    14,
    14,    15,   116,   120,    55,   122,   123,    54,   125,   127,
     5,     4,    53,     3,     2,    52,   140,    49,   143,    48 ]

racc_action_pointer = [
   nil,   168,   214,   210,   208,   204,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    78,   159,   195,   192,   174,   173,   159,
   nil,   nil,   nil,   157,   131,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    73,    28,     9,    77,   nil,   nil,   105,   138,   208,   206,
    36,   nil,   207,   175,   204,   167,    63,   nil,   nil,   nil,
   nil,   nil,   142,   nil,    10,    94,   nil,    31,    -6,    39,
    12,    76,    17,    74,    10,   136,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    82,    92,    91,   nil,    -3,   nil,   131,
   nil,   nil,    81,   131,   nil,   nil,   nil,   nil,   111,   nil,
   nil,   nil,   nil,    -3,    14,   126,   nil,   nil,   nil,   184,
   nil,    46,   nil,   nil,   nil,    -6,   196,   nil,   nil,   nil,
   158,   nil,   186,   167,   126,   202,   nil,   187,   nil,    25,
   nil,   nil,    -6,   nil,    11,     1,   nil,   -12,   nil,    10,
   190,   nil,     5,   196,   nil,   nil,    -4,   nil ]

racc_action_default = [
   -11,   -79,   -79,   -79,   -79,   -79,    -4,    -5,    -6,    -7,
    -8,    -9,   -10,   -79,   -79,   -79,   -79,   -79,   -79,   -79,
   148,    -1,    -2,   -79,   -79,   -43,   -44,   -45,   -48,   -49,
   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -57,   -58,   -59,
   -64,   -64,   -79,   -79,   -46,   -47,   -79,   -79,   -79,   -79,
   -79,    -3,   -79,   -79,   -79,   -79,   -79,   -13,   -17,   -20,
   -26,   -26,   -79,   -35,   -79,   -79,   -63,   -79,   -79,   -79,
   -79,   -30,   -30,   -79,   -38,   -78,   -65,   -66,   -67,   -68,
   -69,   -72,   -75,   -79,   -79,   -64,   -14,   -78,   -18,   -78,
   -21,   -25,   -33,   -79,   -22,   -35,   -24,   -34,   -79,   -37,
   -12,   -76,   -77,   -79,   -79,   -79,   -61,   -62,   -15,   -79,
   -19,   -79,   -31,   -32,   -29,   -38,   -79,   -39,   -40,   -70,
   -78,   -73,   -79,   -79,   -78,   -79,   -23,   -79,   -71,   -79,
   -60,   -16,   -78,   -26,   -78,   -79,   -28,   -30,   -74,   -78,
   -42,   -27,   -78,   -79,   -36,   -26,   -30,   -41 ]

racc_goto_table = [
    24,    71,    72,    74,   100,    75,    53,    55,    69,    12,
     1,    10,     9,    43,    11,    70,   108,     8,   110,     7,
   111,   116,   142,    44,    45,     6,   103,   104,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   115,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    68,   120,   122,   nil,   nil,   nil,   128,
   nil,   107,    83,   131,    84,   nil,   nil,   nil,   nil,   nil,
   nil,   136,   nil,   138,   nil,   nil,   nil,   nil,   141,   nil,
   134,   144,   nil,   nil,   137,   nil,   139,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   117,   146,   nil,   nil,   nil,
   nil,   nil,   123,   nil,   nil,   nil,   nil,   nil,   125 ]

racc_goto_check = [
     9,    15,    15,    16,    11,    10,    29,    29,    13,     8,
     1,     6,     5,    12,     7,    14,    11,     4,    11,     3,
    19,    22,    23,    24,    25,     2,    32,    33,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     9,    10,    10,   nil,   nil,   nil,    11,
   nil,    29,     9,    11,     9,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,    11,   nil,   nil,   nil,   nil,    11,   nil,
    10,    11,   nil,   nil,    15,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     9,    15,   nil,   nil,   nil,
   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,    10,    24,    18,    16,    11,    10,    13,     8,   -13,
   -59,   -71,    -1,   -50,   -44,   -59,   -60,   nil,   nil,   -72,
   nil,   nil,   -77,  -118,     9,    10,   nil,   nil,   nil,   -34,
   nil,   nil,   -55,   -55 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    91,    92,   nil,
    97,    98,   nil,   nil,    26,    27,    37,    38,    39,   nil,
    79,    80,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 47, :_reduce_1,
  3, 47, :_reduce_2,
  4, 47, :_reduce_3,
  2, 47, :_reduce_4,
  2, 47, :_reduce_5,
  2, 47, :_reduce_6,
  2, 47, :_reduce_7,
  2, 47, :_reduce_8,
  2, 47, :_reduce_9,
  2, 47, :_reduce_10,
  0, 47, :_reduce_none,
  6, 48, :_reduce_12,
  3, 49, :_reduce_13,
  5, 50, :_reduce_14,
  3, 59, :_reduce_15,
  5, 59, :_reduce_16,
  0, 59, :_reduce_17,
  5, 51, :_reduce_18,
  3, 60, :_reduce_19,
  0, 60, :_reduce_20,
  5, 52, :_reduce_21,
  5, 53, :_reduce_22,
  7, 54, :_reduce_23,
  5, 54, :_reduce_24,
  2, 61, :_reduce_25,
  0, 61, :_reduce_26,
  7, 63, :_reduce_27,
  5, 63, :_reduce_28,
  2, 64, :_reduce_29,
  0, 64, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  0, 65, :_reduce_none,
  2, 62, :_reduce_34,
  0, 62, :_reduce_35,
  8, 66, :_reduce_36,
  1, 67, :_reduce_37,
  0, 67, :_reduce_38,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  4, 69, :_reduce_41,
  0, 69, :_reduce_42,
  1, 55, :_reduce_43,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 70, :_reduce_48,
  1, 70, :_reduce_49,
  1, 70, :_reduce_50,
  1, 70, :_reduce_51,
  1, 70, :_reduce_52,
  1, 70, :_reduce_53,
  1, 70, :_reduce_54,
  1, 70, :_reduce_55,
  1, 70, :_reduce_56,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  7, 72, :_reduce_60,
  5, 73, :_reduce_61,
  5, 74, :_reduce_62,
  2, 75, :_reduce_none,
  0, 75, :_reduce_none,
  1, 56, :_reduce_65,
  1, 56, :_reduce_66,
  1, 56, :_reduce_67,
  1, 56, :_reduce_68,
  1, 56, :_reduce_69,
  3, 76, :_reduce_70,
  3, 78, :_reduce_71,
  0, 78, :_reduce_72,
  3, 77, :_reduce_73,
  5, 79, :_reduce_74,
  0, 79, :_reduce_75,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  0, 57, :_reduce_none ]

racc_reduce_n = 79

racc_shift_n = 148

racc_token_table = {
  false => 0,
  :error => 1,
  :INCLUDE => 2,
  :LITERAL => 3,
  :CPP_INCLUDE => 4,
  :NAMESPACE => 5,
  :IDENT => 6,
  :CONST => 7,
  "=" => 8,
  :TYPEDEF => 9,
  :ENUM => 10,
  "{" => 11,
  "}" => 12,
  :NUMBER => 13,
  :SENUM => 14,
  :STRUCT => 15,
  :EXCEPTION => 16,
  :SERVICE => 17,
  :EXTENDS => 18,
  ":" => 19,
  :REQUIRED => 20,
  :OPTIONAL => 21,
  "(" => 22,
  ")" => 23,
  :ONEWAY => 24,
  :VOID => 25,
  :THROWS => 26,
  :BOOL => 27,
  :BYTE => 28,
  :I16 => 29,
  :I32 => 30,
  :I64 => 31,
  :DOUBLE => 32,
  :STRING => 33,
  :BINARY => 34,
  :SLIST => 35,
  :MAP => 36,
  "<" => 37,
  "," => 38,
  ">" => 39,
  :SET => 40,
  :LIST => 41,
  :CPP_TYPE => 42,
  "[" => 43,
  "]" => 44,
  ";" => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INCLUDE",
  "LITERAL",
  "CPP_INCLUDE",
  "NAMESPACE",
  "IDENT",
  "CONST",
  "\"=\"",
  "TYPEDEF",
  "ENUM",
  "\"{\"",
  "\"}\"",
  "NUMBER",
  "SENUM",
  "STRUCT",
  "EXCEPTION",
  "SERVICE",
  "EXTENDS",
  "\":\"",
  "REQUIRED",
  "OPTIONAL",
  "\"(\"",
  "\")\"",
  "ONEWAY",
  "VOID",
  "THROWS",
  "BOOL",
  "BYTE",
  "I16",
  "I32",
  "I64",
  "DOUBLE",
  "STRING",
  "BINARY",
  "SLIST",
  "MAP",
  "\"<\"",
  "\",\"",
  "\">\"",
  "SET",
  "LIST",
  "CPP_TYPE",
  "\"[\"",
  "\"]\"",
  "\";\"",
  "$start",
  "Document",
  "Const",
  "Typedef",
  "Enum",
  "Senum",
  "Struct",
  "Exception",
  "Service",
  "FieldType",
  "ConstValue",
  "ListSeparator",
  "DefinitionType",
  "EnumLoop",
  "SenumLoop",
  "Fields",
  "Functions",
  "Field",
  "FieldID",
  "FieldReq",
  "Function",
  "Oneway",
  "FunctionType",
  "Throws",
  "BaseType",
  "ContainerType",
  "MapType",
  "SetType",
  "ListType",
  "CppType",
  "ConstList",
  "ConstMap",
  "ConstListLoop",
  "ConstMapLoop" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 8)
  def _reduce_1(val, _values, result)
     @includes << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 9)
  def _reduce_2(val, _values, result)
     @cpp_includes << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 10)
  def _reduce_3(val, _values, result)
     @namespaces[val[2]] = val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 13)
  def _reduce_4(val, _values, result)
     @consts[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 14)
  def _reduce_5(val, _values, result)
     @typedefs[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 15)
  def _reduce_6(val, _values, result)
     @enums[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 16)
  def _reduce_7(val, _values, result)
     @senums[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 17)
  def _reduce_8(val, _values, result)
     @structs[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 18)
  def _reduce_9(val, _values, result)
     @exceptions[val[1].name] = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 19)
  def _reduce_10(val, _values, result)
     @services[val[1].name] = val[1] 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 25)
  def _reduce_12(val, _values, result)
     result = ConstOp.new(val[2], val[1], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 29)
  def _reduce_13(val, _values, result)
     result = TypedefOp.new(val[2], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 33)
  def _reduce_14(val, _values, result)
     result = EnumOp.new(val[1], Hash[*val[3].flatten]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 37)
  def _reduce_15(val, _values, result)
     result << [val[1], result.last ? result.last[1] + 1 : 1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 39)
  def _reduce_16(val, _values, result)
     result << [val[1], val[3].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 41)
  def _reduce_17(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 45)
  def _reduce_18(val, _values, result)
     result = SenumOp.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 49)
  def _reduce_19(val, _values, result)
     result << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 51)
  def _reduce_20(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 55)
  def _reduce_21(val, _values, result)
     result = StructOp.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 59)
  def _reduce_22(val, _values, result)
     result = ExceptionOp.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 63)
  def _reduce_23(val, _values, result)
     result = ServiceOp.new(val[1], val[5], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 65)
  def _reduce_24(val, _values, result)
     result = ServiceOp.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 71)
  def _reduce_25(val, _values, result)
     result << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 72)
  def _reduce_26(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 76)
  def _reduce_27(val, _values, result)
     result = FieldOp.new(val[3], val[2], val[0], val[1], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 78)
  def _reduce_28(val, _values, result)
     result = FieldOp.new(val[3], val[2], val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 83)
  def _reduce_29(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 96)
  def _reduce_34(val, _values, result)
     result << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 97)
  def _reduce_35(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 101)
  def _reduce_36(val, _values, result)
     result = FunctionOp.new(val[2], val[1], val[4], val[0], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 105)
  def _reduce_37(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 106)
  def _reduce_38(val, _values, result)
     result = false 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 114)
  def _reduce_41(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 115)
  def _reduce_42(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 121)
  def _reduce_43(val, _values, result)
     result = TypeOp.new(:ident, val[0]) 
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 130)
  def _reduce_48(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 131)
  def _reduce_49(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 132)
  def _reduce_50(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 133)
  def _reduce_51(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 134)
  def _reduce_52(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 135)
  def _reduce_53(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 136)
  def _reduce_54(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 137)
  def _reduce_55(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 138)
  def _reduce_56(val, _values, result)
     result = TypeOp.new(:primitive, val[0]) 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 145)
  def _reduce_60(val, _values, result)
     result = MapOp.new(val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 149)
  def _reduce_61(val, _values, result)
     result = SetOp.new(val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 153)
  def _reduce_62(val, _values, result)
     result = ListOp.new(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'thrift_idl_parser.y', 163)
  def _reduce_65(val, _values, result)
     result = ConstValueOp.new(:number, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 164)
  def _reduce_66(val, _values, result)
     result = ConstValueOp.new(:string, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 165)
  def _reduce_67(val, _values, result)
     result = ConstValueOp.new(:ident, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 166)
  def _reduce_68(val, _values, result)
     result = ConstValueOp.new(:list, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 167)
  def _reduce_69(val, _values, result)
     result = ConstValueOp.new(:map, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 171)
  def _reduce_70(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 175)
  def _reduce_71(val, _values, result)
     result << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 176)
  def _reduce_72(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 180)
  def _reduce_73(val, _values, result)
     result = Hash[*val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 184)
  def _reduce_74(val, _values, result)
     result << [val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'thrift_idl_parser.y', 185)
  def _reduce_75(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ThriftIDL


if defined?(RSpec)
  describe "lex" do
    before do
      @idl = ThriftIDL.new.parse <<__IDL__
include "Types.thrift"
include "Errors.thrift"

cpp_include "Cpp1.thrift"
cpp_include "Cpp2.thrift"

namespace cocoa EDAM
namespace php edam_userstore

const i16 EDAM_VERSION_MAJOR = 1
const set<string> EDAM_MIME_TYPES = [
  EDAM_MIME_TYPE_GIF,
  EDAM_MIME_TYPE_JPEG
];

typedef i32 UserID
typedef string Guid

enum EDAMErrorCode {
  UNKNOWN = 1,
  BAD_DATA_FORMAT = 2
}

senum Demo {
  "A"
  "B"
}

struct AuthenticationResult {
  1:  required  Types.Timestamp currentTime,
  2:  required  string authenticationToken ,
  5:  optional  list<string> viewedPromotions,
}

exception EDAMSystemException {
  1:  required  EDAMErrorCode errorCode,
  2:  optional  string message
}

service NoteStore {
  SyncState getSyncState(1: string authenticationToken)
    throws (1: Errors.EDAMUserException userException,
            2: Errors.EDAMSystemException systemException),

}
__IDL__
    end
    
    it "include" do
      @idl.includes.sort.should == %w(Types.thrift Errors.thrift).sort
    end
    
    it "cpp_include" do
      @idl.cpp_includes.sort.should == %w(Cpp1.thrift Cpp2.thrift).sort
    end

    it "namespace" do
      @idl.namespaces.count.should == 2
      @idl.namespaces['cocoa'].should == 'EDAM'
      @idl.namespaces['php'].should == 'edam_userstore'
    end
    
    it "consts" do
      @idl.consts.count.should == 2
      
      evm = @idl.consts['EDAM_VERSION_MAJOR']
      evm.name.should == 'EDAM_VERSION_MAJOR'
      evm.object.type.should == :number
      evm.object.value.should == 1
      evm.type.category.should == :primitive
      evm.type.name.should == 'i16'

      emt = @idl.consts['EDAM_MIME_TYPES']
      emt.name.should == 'EDAM_MIME_TYPES'

      emt.type.should be_a_kind_of(SetOp)
      emt.type.category.should == :set
      emt.type.type.name.should == 'string'

      emt.object.value.should be_a_kind_of(Array)
      emt.object.value.map(&:type).sort.should == [:ident, :ident].sort
      emt.object.value.map(&:value).sort.should == %w(EDAM_MIME_TYPE_GIF EDAM_MIME_TYPE_JPEG).sort
    end
    
    it "typedef" do
      @idl.typedefs.count.should == 2
      @idl.typedefs['UserID'].name.should == 'UserID'
      @idl.typedefs['UserID'].type.category.should == :primitive
      @idl.typedefs['UserID'].type.name.should == 'i32'
      @idl.typedefs['Guid'].name.should == 'Guid'
      @idl.typedefs['Guid'].type.category.should == :primitive
      @idl.typedefs['Guid'].type.name.should == 'string'
    end

    it "enum" do
      @idl.enums.count.should == 1
      @idl.enums['EDAMErrorCode'].items.count.should == 2
      @idl.enums['EDAMErrorCode'].items['UNKNOWN'].should == 1
      @idl.enums['EDAMErrorCode'].items['BAD_DATA_FORMAT'].should == 2
    end

    it "senum" do
      @idl.senums.count.should == 1
      @idl.senums['Demo'].items.sort.should == %w(A B).sort
    end

    it "struct" do
      @idl.structs.count.should == 1
      arf = @idl.structs['AuthenticationResult'].fields
      arf.count.should == 3
      arf[0].name.should == 'currentTime'
      arf[0].type.category.should == :ident
      arf[0].type.name.should == 'Types.Timestamp'
      arf[0].req.should == 'required'
      arf[0].id.should == 1
      
      arf[1].name.should == 'authenticationToken'
      arf[1].type.category.should == :primitive
      arf[1].type.name.should == 'string'
      arf[1].req.should == 'required'
      arf[1].id.should == 2

      arf[2].name.should == 'viewedPromotions'
      arf[2].type.should be_kind_of(ListOp)
      arf[2].type.type.category.should == :primitive
      arf[2].type.type.name.should == 'string'
      arf[2].req.should == 'optional'
      arf[2].id.should == 5
    end

    it "exceptions" do
      @idl.exceptions.count.should == 1
      fields = @idl.exceptions['EDAMSystemException'].fields
      fields.count.should == 2
      fields[0].name.should == 'errorCode'
      fields[0].type.category.should == :ident
      fields[0].type.name.should == 'EDAMErrorCode'
      fields[0].req.should == 'required'
      fields[0].id.should == 1
      fields[1].name.should == 'message'
      fields[1].type.category.should == :primitive
      fields[1].type.name.should == 'string'
      fields[1].req.should == 'optional'
      fields[1].id.should == 2
    end

    it "service" do
      @idl.services.count.should == 1
      s = @idl.services['NoteStore']
      s.name.should == 'NoteStore'
      s.functions.count.should == 1
      s.functions[0].name.should == 'getSyncState'
      s.functions[0].result.category.should == :ident
      s.functions[0].result.name.should == 'SyncState'
      s.functions[0].arguments.count.should == 1
      s.functions[0].arguments[0].name.should == 'authenticationToken'
      s.functions[0].arguments[0].type.category.should == :primitive
      s.functions[0].arguments[0].type.name.should == 'string'
      s.functions[0].arguments[0].id.should == 1
      s.functions[0].throws.count.should == 2
      s.functions[0].throws[0].id.should == 1
      s.functions[0].throws[0].name.should == 'userException'
      s.functions[0].throws[0].type.category.should == :ident
      s.functions[0].throws[0].type.name.should == 'Errors.EDAMUserException'
      s.functions[0].throws[1].id.should == 2
      s.functions[0].throws[1].name.should == 'systemException'
      s.functions[0].throws[1].type.category.should == :ident
      s.functions[0].throws[1].type.name.should == 'Errors.EDAMSystemException'
    end
    
  end
end
